# Generated by Django 5.1.6 on 2025-07-14 09:05

import deped_app.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='announcement_files/')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcement',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='awards_image')),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='awards_file')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Awards',
                'verbose_name_plural': 'Awards',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='AwardsNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectname', models.CharField(blank=True, max_length=1000, null=True)),
                ('abc', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=100, null=True)),
                ('awardee', models.CharField(blank=True, max_length=1000, null=True)),
                ('contractamount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=100, null=True)),
                ('dateawarded', models.DateField(blank=True, null=True)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='awards_notices/%Y/%m/%d/')),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Awards Notice',
                'verbose_name_plural': 'Awards Notice',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='BidOpportunities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectname', models.CharField(blank=True, max_length=1000, null=True)),
                ('ref', models.IntegerField(blank=True, default=0, null=True)),
                ('abc', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
                ('link', models.URLField(blank=True, null=True, verbose_name='Online Link')),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='bid_opportunities/%Y/%m/%d/')),
            ],
            options={
                'verbose_name': 'Bid Opportunity',
                'verbose_name_plural': 'Bid Opportunities',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='CitizensCharter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Citizens Charter',
                'verbose_name_plural': 'Citizens Charter',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=1000)),
                ('workemail', models.EmailField(max_length=254)),
                ('organization', models.CharField(help_text='School or company name', max_length=1000)),
                ('message', models.TextField(help_text='Tell us more about your needs and timeline')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoreValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='mvmcv_files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Core Values',
                'verbose_name_plural': 'Core Values',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='DepedAdvisories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049)], default=2025)),
                ('month', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=1)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(help_text='PDF file only', storage=deped_app.models.YearMonthFileStorage(), upload_to='depedadvisories/')),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepedOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049)], default=2025)),
                ('month', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=1)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(help_text='PDF file only', storage=deped_app.models.YearMonthFileStorage(), upload_to='depedorder/')),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionMemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049)], default=2025)),
                ('month', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=1)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(help_text='PDF file only', storage=deped_app.models.YearMonthFileStorage(), upload_to='divisionmemo/')),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LearningDevelopment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='learning_development/%Y/%m/%d/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Learning and Development',
                'verbose_name_plural': 'Learning and Development',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='Mandate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='mvmcv_files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Mandate',
                'verbose_name_plural': 'Mandate',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='mvmcv_files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Mission',
                'verbose_name_plural': 'Mission',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_image')),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='news_files/')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='OfficeMemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049)], default=2025)),
                ('month', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=1)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(help_text='PDF file only', storage=deped_app.models.YearMonthFileStorage(), upload_to='officememo/')),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgChartWhole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_chart_image', models.ImageField(blank=True, null=True, upload_to='orgchart_images/')),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='performance_management/%Y/%m/%d/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Performance Management',
                'verbose_name_plural': 'Performance Management',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='program_image')),
                ('description', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='program_files/')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Program',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='QualityPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='qualitypolicy_files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Quality Policy',
                'verbose_name_plural': 'Quality Policy',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='QuickLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('links', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Quick Links',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='RecruitmentSelectionPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='primehrm/%Y/%m/%d/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Recruitment Selection Placement',
                'verbose_name_plural': 'Recruitment Selection Placement',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='RewardsRecognitions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('file', models.FileField(upload_to='rewards_recognitions/%Y/%m/%d/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_published', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Rewards & Recognition',
                'verbose_name_plural': 'Rewards & Recognitions',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('contact_email', models.EmailField(default='info@deped.gov.ph', max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('quick_links_json', models.TextField(blank=True, default='{}', help_text='JSON format for quick links. Example: {"Bid Opportunities": "/bid-opportunities"}', null=True)),
            ],
            options={
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, max_length=5000, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/%y')),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='VideosCitizensCharter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, max_length=5000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/%y')),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, help_text='PDF file only', null=True, upload_to='mvmcv_files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Vision',
                'verbose_name_plural': 'Vision',
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationalChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management', models.CharField(blank=True, choices=[('OSDS', 'Office of the Schools Division Superintendent'), ('ADMIN', 'Administrative Section'), ('GENERAL', 'General Service'), ('FINANCE', 'Finance'), ('CID', 'Curriculum Implementation Division'), ('ALS', 'Alternative Learning System'), ('SGOD', 'School Governance and Operations Division')], max_length=1000, null=True, verbose_name='Department')),
                ('positions', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='orgchart_images/')),
                ('contact', models.CharField(blank=True, max_length=1000, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, help_text='Automatically set based on position hierarchy', null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Organizational Charts',
                'ordering': ['management', 'priority', 'name'],
                'indexes': [models.Index(fields=['management'], name='deped_app_o_managem_3fe40c_idx'), models.Index(fields=['positions'], name='deped_app_o_positio_5a02b6_idx'), models.Index(fields=['priority'], name='deped_app_o_priorit_3bc202_idx')],
            },
        ),
    ]
